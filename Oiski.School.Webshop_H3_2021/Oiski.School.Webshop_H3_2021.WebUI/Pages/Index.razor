@page "/"
@inject HttpClient client
@inject NavigationManager nav
@inject IToastService toastService

<div class="row">
    <div class="col-6">
        <h1>You are viewing our products:</h1>
    </div>
    <div class="col-4">
        @if (Categories != null)
        {
            <div class="input-group">
                <label class="col-5 text-right" for="ProductCategory">Filter by</label>
                <select class="col-7 form-control" @bind="SelectedValue">
                    <option value="">All</option>
                    @foreach (var category in Categories)
                    {
                        <option value="@category.CategoryID">@category.Name</option>
                    }
                </select>
            </div>
        }
    </div>
    <div class="col-2">
        <button @onclick='() => nav.NavigateTo($"/Product/Create")' class="btn btn-primary"><i class="oi oi-paperclip"></i> Create</button>
    </div>
</div>
<div class="row">
    @if (Products != null)
    {
        @foreach (var product in Products)
        {
            @if (SelectedValue == product.CategoryID || 0 == SelectedValue)
            {
                <ProductCard Product="@product"></ProductCard>
            }
        }
    }
    else
    {
        <p>Loading front page...</p>
    }
</div>


@code{
    private IReadOnlyList<IProductDisplay> Products { get; set; }
    private IReadOnlyList<ICategoryBase> Categories { get; set; }

    private ICategoryBase Category { get; }

    [Parameter]
    public int SelectedValue { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Products = await client.GetFromJsonAsync<IReadOnlyList<ProductDisplay>>("Http://localhost:4020/Controller/Products");
        Categories = await client.GetFromJsonAsync<IReadOnlyList<CategoryBase>>("Http://localhost:4020/Controller/Categories");
    }
}