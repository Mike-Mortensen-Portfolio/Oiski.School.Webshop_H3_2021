// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oiski.School.Webshop_H3_2021.Datalayer.Domain;

namespace Oiski.School.Webshop_H3_2021.Datalayer.Migrations
{
    [DbContext(typeof(WebshopContext))]
    partial class WebshopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Brand", b =>
                {
                    b.Property<int>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandID");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandID = 1,
                            Name = "H&M"
                        },
                        new
                        {
                            BrandID = 2,
                            Name = "NA-KD"
                        },
                        new
                        {
                            BrandID = 3,
                            Name = "Nike"
                        },
                        new
                        {
                            BrandID = 4,
                            Name = "ASOS"
                        });
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "Upper body"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "Lower body"
                        },
                        new
                        {
                            CategoryID = 3,
                            Name = "Full body"
                        },
                        new
                        {
                            CategoryID = 4,
                            Name = "Footwear"
                        });
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("CustomerID");

                    b.HasIndex("UserID")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Address = "Nygade 38A, 2",
                            City = "Aabenraa",
                            Country = "Denmark",
                            Email = "jasminnielsen97@gmail.com",
                            FirstName = "Jasmin",
                            LastName = "Nielsen",
                            PhoneNumber = "26139596",
                            UserID = 3,
                            ZipCode = 6200
                        },
                        new
                        {
                            CustomerID = 2,
                            Address = "Ringgade 65",
                            City = "Sønderborg",
                            Country = "Denmark",
                            Email = "zhakalen@gmail.com",
                            FirstName = "Mike",
                            LastName = "Mortensen",
                            PhoneNumber = "25987658",
                            UserID = 1,
                            ZipCode = 6400
                        },
                        new
                        {
                            CustomerID = 3,
                            Address = "Nordre Ringvej 20",
                            City = "Vojens",
                            Country = "Denmark",
                            Email = "ulrikLarsen@gmail.com",
                            FirstName = "Ulrik",
                            LastName = "Larsen",
                            PhoneNumber = "25496875",
                            UserID = 2,
                            ZipCode = 6500
                        },
                        new
                        {
                            CustomerID = 4,
                            Address = "Nordre Ringvej 20",
                            City = "Vojens",
                            Country = "Denmark",
                            Email = "ullelarsen@gmail.com",
                            FirstName = "Ulrik",
                            LastName = "Larsen",
                            PhoneNumber = "25496875",
                            ZipCode = 6500
                        });
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypeOfDelivery")
                        .HasColumnType("int");

                    b.Property<int>("TypeOfPayment")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            CustomerID = 2,
                            OrderDate = new DateTime(2021, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeOfDelivery = 0,
                            TypeOfPayment = 0
                        },
                        new
                        {
                            OrderID = 2,
                            CustomerID = 1,
                            OrderDate = new DateTime(2021, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeOfDelivery = 0,
                            TypeOfPayment = 0
                        });
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.OrderProduct", b =>
                {
                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductID", "OrderID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            OrderID = 1,
                            Quantity = 2
                        },
                        new
                        {
                            ProductID = 4,
                            OrderID = 1,
                            Quantity = 0
                        },
                        new
                        {
                            ProductID = 5,
                            OrderID = 1,
                            Quantity = 0
                        },
                        new
                        {
                            ProductID = 2,
                            OrderID = 2,
                            Quantity = 0
                        },
                        new
                        {
                            ProductID = 3,
                            OrderID = 2,
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ISDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("InStock")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductID");

                    b.HasIndex("BrandID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            BrandID = 1,
                            CategoryID = 2,
                            Description = "These pants are great for the Autumn weather.",
                            ISDeleted = false,
                            InStock = 125,
                            Price = 40.58m,
                            Title = "High-waisted jeans"
                        },
                        new
                        {
                            ProductID = 2,
                            BrandID = 2,
                            CategoryID = 2,
                            Description = "The perfect outfit for your lower body.",
                            ISDeleted = false,
                            InStock = 50,
                            Price = 26.25m,
                            Title = "Skater skirt"
                        },
                        new
                        {
                            ProductID = 3,
                            BrandID = 4,
                            CategoryID = 3,
                            Description = "Beer parties on the beach? This is your dress.",
                            ISDeleted = false,
                            InStock = 75,
                            Price = 53.75m,
                            Title = "Summer dress"
                        },
                        new
                        {
                            ProductID = 4,
                            BrandID = 3,
                            CategoryID = 4,
                            Description = "Love long walks? Choose these sneakers.",
                            ISDeleted = false,
                            InStock = 130,
                            Price = 88m,
                            Title = "Sneakers paradise, Nike"
                        },
                        new
                        {
                            ProductID = 5,
                            BrandID = 1,
                            CategoryID = 1,
                            Description = "Drink a warm cup of chocolate while cozing up in this sweater.",
                            ISDeleted = false,
                            InStock = 109,
                            Price = 28m,
                            Title = "Warm knitted-sweater"
                        },
                        new
                        {
                            ProductID = 6,
                            BrandID = 3,
                            CategoryID = 4,
                            Description = "Perfect for the daily life.",
                            ISDeleted = false,
                            InStock = 180,
                            Price = 52m,
                            Title = "Simple Sneakers, Nike Air"
                        },
                        new
                        {
                            ProductID = 7,
                            BrandID = 1,
                            CategoryID = 1,
                            Description = "Style it however you'd want to!",
                            ISDeleted = false,
                            InStock = 256,
                            Price = 15m,
                            Title = "Simple T-shirt"
                        });
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.ProductImage", b =>
                {
                    b.Property<int>("ProductImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductImageID");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            ProductImageID = 1,
                            ImageURL = "Clothes/Bottoms/High-Waisted-Jeans-Front.jpg",
                            ProductID = 1,
                            Title = "High-Waisted-Jeans-Front"
                        },
                        new
                        {
                            ProductImageID = 2,
                            ImageURL = "Clothes/Bottoms/High-Waisted-Jeans-Back.jpg",
                            ProductID = 1,
                            Title = "High-Waisted-Jeans-Back"
                        },
                        new
                        {
                            ProductImageID = 3,
                            ImageURL = "Clothes/Bottoms/Skater-Skirt-Front.jpg",
                            ProductID = 2,
                            Title = "Skater-Skirt-Front"
                        },
                        new
                        {
                            ProductImageID = 4,
                            ImageURL = "Clothes/Bottoms/Skater-Skirt-Back.jpg",
                            ProductID = 2,
                            Title = "Skater-Skirt-Back"
                        },
                        new
                        {
                            ProductImageID = 5,
                            ImageURL = "Clothes/FullBody/Summer-Dress-Front.jpg",
                            ProductID = 3,
                            Title = "Summer-Dress-Front"
                        },
                        new
                        {
                            ProductImageID = 6,
                            ImageURL = "Clothes/FullBody/Summer-Dress-Back.jpg",
                            ProductID = 3,
                            Title = "Summer-Dress-Back"
                        },
                        new
                        {
                            ProductImageID = 7,
                            ImageURL = "Clothes/Shoes/Sneakers-Paradise-Front.jpg",
                            ProductID = 4,
                            Title = "Sneakers-Paradise-Front"
                        },
                        new
                        {
                            ProductImageID = 8,
                            ImageURL = "Clothes/Shoes/Sneakers-Paradise-Back.jpg",
                            ProductID = 4,
                            Title = "Sneakers-Paradise-Back"
                        },
                        new
                        {
                            ProductImageID = 9,
                            ImageURL = "Clothes/Top/Warm-Knitted-Sweater-Front.jpg",
                            ProductID = 5,
                            Title = "Warm-Knitted-Sweater-Front"
                        },
                        new
                        {
                            ProductImageID = 10,
                            ImageURL = "Clothes/Top/Warm-Knitted-Sweater-Back.jpg",
                            ProductID = 5,
                            Title = "Warm-Knitted-Sweater-Back"
                        },
                        new
                        {
                            ProductImageID = 11,
                            ImageURL = "Clothes/Shoes/Simple-Sneakers-Front.jpg",
                            ProductID = 6,
                            Title = "Simple-Sneakersle-Front"
                        },
                        new
                        {
                            ProductImageID = 12,
                            ImageURL = "Clothes/Shoes/Simple-Sneakers-Back.jpg",
                            ProductID = 6,
                            Title = "Simple-Sneakers-Back"
                        },
                        new
                        {
                            ProductImageID = 13,
                            ImageURL = "Clothes/Top/Simple-T-shirt-Front.jpg",
                            ProductID = 7,
                            Title = "Simple-T-shirt-Front"
                        },
                        new
                        {
                            ProductImageID = 14,
                            ImageURL = "Clothes/Top/Simple-T-shirt-Back.jpg",
                            ProductID = 7,
                            Title = "Simple-T-shirt-Back"
                        });
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            CustomerID = 2,
                            IsAdmin = true,
                            Password = "P@ssw0rd"
                        },
                        new
                        {
                            UserID = 2,
                            CustomerID = 3,
                            IsAdmin = false,
                            Password = "P@ssw0rd"
                        },
                        new
                        {
                            UserID = 3,
                            CustomerID = 1,
                            IsAdmin = true,
                            Password = "P@ssw0rd"
                        });
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Customer", b =>
                {
                    b.HasOne("Oiski.School.Webshop_H3_2021.Datalayer.Entities.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Customer", "UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Order", b =>
                {
                    b.HasOne("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.OrderProduct", b =>
                {
                    b.HasOne("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Product", b =>
                {
                    b.HasOne("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.ProductImage", b =>
                {
                    b.HasOne("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Product", null)
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Order", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.Product", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Oiski.School.Webshop_H3_2021.Datalayer.Entities.User", b =>
                {
                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
